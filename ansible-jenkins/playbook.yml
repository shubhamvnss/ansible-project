---
- name: Configure Jenkins server
  hosts: all
  become: true

  tasks:
    - name: Update apt cache
      apt:
        update_cache: yes
        cache_valid_time: 3600

    - name: Install dependencies
      apt:
        name: "{{ item }}"
        state: present
      loop:
        - unzip
        - curl
        - gnupg2
        - ca-certificates

    - name: Download Jenkins GPG key
      get_url:
        url: https://pkg.jenkins.io/debian-stable/jenkins.io-2023.key
        dest: /usr/share/keyrings/jenkins-keyring.asc
        mode: '0644'

    - name: Add Jenkins apt repository
      apt_repository:
        repo: "deb [signed-by=/usr/share/keyrings/jenkins-keyring.asc] https://pkg.jenkins.io/debian-stable binary/"
        filename: jenkins
        state: present

    - name: Install Docker
      apt:
        name: docker.io
        state: present

    - name: Start and enable Docker
      systemd:
        name: docker
        enabled: yes
        state: started

    - name: Add ubuntu user to docker group
      user:
        name: ubuntu
        groups: docker
        append: yes

    - name: Install Java
      apt:
        name: openjdk-17-jdk
        state: present

    - name: Install Jenkins
      apt:
        name: jenkins
        state: present
        update_cache: yes

    - name: Disable Jenkins setup wizard
      lineinfile:
        path: /etc/default/jenkins
        regexp: '^JENKINS_ARGS='
        line: 'JENKINS_ARGS="--argumentsRealm.passwd.admin=admin --argumentsRealm.roles.admin=admin --httpPort=8080"'
      notify: Restart Jenkins

    - name: Create init.groovy.d directory
      file:
        path: /var/lib/jenkins/init.groovy.d
        state: directory
        owner: jenkins
        group: jenkins
        mode: '0755'

    - name: Copy Groovy script to create admin user
      copy:
        dest: /var/lib/jenkins/init.groovy.d/basic-security.groovy
        content: |
          import jenkins.model.*
          import hudson.security.*

          def instance = Jenkins.getInstance()

          def hudsonRealm = new HudsonPrivateSecurityRealm(false)
          hudsonRealm.createAccount("admin", "admin")
          instance.setSecurityRealm(hudsonRealm)

          def strategy = new FullControlOnceLoggedInAuthorizationStrategy()
          strategy.setAllowAnonymousRead(false)
          instance.setAuthorizationStrategy(strategy)

          instance.save()
        owner: jenkins
        group: jenkins
        mode: '0644'
      notify: Restart Jenkins

    - name: Start and enable Jenkins
      systemd:
        name: jenkins
        enabled: yes
        state: started

    - name: Add jenkins user to docker group
      user:
        name: jenkins
        groups: docker
        append: yes
    - name: Install AWS CLI v2
      shell: |
        curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
        unzip awscliv2.zip
        ./aws/install
      args:
        creates: /usr/local/bin/aws

  handlers:
    - name: Restart Jenkins
      systemd:
        name: jenkins
        state: restarted
